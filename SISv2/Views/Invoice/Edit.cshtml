@model SISv2.Models.Invoice

@*@{
    ViewBag.Title = "Edit";
}*@

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Invoice</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.StudentId, "StudentName", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-xs-4">
                @Html.DropDownList("StudentId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ref,"Your Ref.", htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.DropDownList("Ref", new List<SelectListItem>
           {
               new SelectListItem {Text ="Cash", Value ="Cash" },
               new SelectListItem {Text ="Cheque", Value ="Cheque"},
           }, htmlAttributes: new { @class = "form-control"})
                @*@Html.EditorFor(model => model.Ref, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ref, "", new { @class = "text-danger" })*@
            </div>
        </div>

     
        @if (Model.Amount != null && Model.Amount.Count() > 0)
        {
            <div id="AmountList">
        <div class="form-group">
            @Html.Label("Amount[0].Description","Description", htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.Hidden("Amount[0].Id", Model.Amount.ElementAt(0).Id)
                @Html.TextBox("Amount[0].Description", Model.Amount.ElementAt(0).Description, new { @class = "form-control" })
                @Html.ValidationMessage("Amount[0].Description", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Amount[0].Amt", htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.TextBox("Amount[0].Amt", Model.Amount.ElementAt(0).Amt, new { @class = "form-control" })
                @Html.ValidationMessage("Amount[0].Amt", "", new { @class = "text-danger" })
            </div>
        </div>
                </div>
        }
        else
        {
            <div id="AmountList">
                <div class="form-group">
                    @Html.Label("Amount[0].Description","Description", htmlAttributes: new { @class = "control-label col-xs-2"})
                    <div class="col-xs-4">
                        @Html.Editor("Amount[0].Description", new { htmlAttributes = new {@class ="form-control"}})
                        @Html.ValidationMessage("Amount[0].Description", "", new { @class ="text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Amount[0].Amt", htmlAttributes: new { @class = "control-label col-xs-2"})
                    <div class="col-xs-4">
                        @Html.Editor("Amount[0].Amt", new { htmlAttributes = new { @class ="form-control"}})
                        @Html.ValidationMessage("Amount[0].Amt", "", new { @class ="text-danger"})
                    </div>
                </div>
            </div>
        }

        @if(Model.Amount != null && Model.Amount.Count() > 1)
        {
            for(var i = 1; i < Model.Amount.Count(); i++)
            {
                <div id="AmountList">
                    <div class="form-group">
                        @Html.Label("Amount[" + @i + "].Description", "Description", htmlAttributes: new { @class = "control-label col-xs-2"})
                        <div class="col-xs-4">
                            @Html.Hidden("Amount[" + @i + "].Id", Model.Amount.ElementAt(i).Id)
                            @Html.TextBox("Amount[" + @i + "].Description", Model.Amount.ElementAt(i).Description, new {@class = "form-control"})
                            @Html.ValidationMessage("Amount[" + @i + "].Description", "", new { @class ="text-danger"})
                        </div>
                        <div class="col-xs-1">
                            <button type="button" onclick='return _deleteAdd(@Model.Amount.ElementAt(i).Id, this)' class="btn btn-primary btn-xs"><i class="fa fa-times" aria-hidden="true"></i></button>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Amount[" + @i + "].Amt", "Amt", htmlAttributes: new { @class ="control-label col-xs-2"})
                        <div class="col-xs-4">
                            @Html.TextBox("Amount[" + @i + "].Amt", Model.Amount.ElementAt(i).Amt, new { @class ="form-control"})
                            @Html.ValidationMessage("Amount[" + @i + "].Amt", "", new { @class ="text-danger"})
                        </div>
                    </div>
                </div>
            }
         }

        <div id="amountButton" class="form-group">
            <label class="control-label col-xs-2"></label>
            <div class="col-xs-4">
                <button id="addAmount" type="button" class="btn btn-primary btn-xs"><i class="fa fa-plus-circle" aria-hidden="true"></i>&nbsp;Add</button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control", @type ="color" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.cd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cb, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cb, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ud, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ud, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ud, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ub, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ub, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ub, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.st, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.st, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.st, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-primary"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function _deleteAdd(id, t) {
            var cf = confirm("Are you confirm to delete this amount?");
            if (cf) {
                $.ajax({
                    url: "/student/DeleteAmount?id=" + id,
                    success: function (response) {
                        if (response.deleteRow > 0) {
                            $(t).parent().parent().remove();
                            _updateAmountId();
                        }
                        else
                            alert("none")
                    },
                    error: function () {
                        alert("fail");
                    }
                });
            }
        }

        function _deleteAmount(t) {
            $(t).parent().parent().remove();
            _updateAmountId();
        }

        function _updateAmountId() {
            var amountObj = $('addressDiv');
            var l = amountObj.length;
            var k = 1;

            amountObj.each(function () {
                if (l > 0 && k <= 1) {
                    this.childNodes[0].childNodes[0].innerHTML = "Amount(" + (k + 1) + ")";
                    this.childNodes[1].childNodes[1].childNodes[0].name = "Amount[" + k + "].Description";
                    this.childNodes[2].childNodes[1].childNodes[0].name = "Amount[" + k + "].Amt";

                    k++;
                }
            });
        }

        $(document).ready(function () {
            $("#addAmount").click(function () {
                var z = $('.amountDiv').length + 1;

                $("#amountButton").before("<div class='addressDiv form-group'><h4><span>Amount(" + (z + 1) + ")</span><button type='button' onclick='return _deleteAmount(this)' class='btn btn-primary btn-xs'><i class='fa fa-times' aria-hidden='true'></i></button></h4><div class='form-group'><label class='control-label col-xs-2'>Description</label><div class'col-xs-4'><input class='form-control text-box single-line' name='Amount[" + z + "].Description' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>Amt</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Amount[" + z + "].Amt' type='text' value=''></div></div>");
            });
        });
    </script>
}
