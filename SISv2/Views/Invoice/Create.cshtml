@model SISv2.Models.Invoice

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Invoice</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StudentId, "StudentName", htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.DropDownList("StudentId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ref, "Your Ref.", htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.DropDownList("Ref", new List<SelectListItem>
           {
               new SelectListItem {Text = "Cash", Value = "Cash" },
               new SelectListItem {Text = "Cheque", Value = "Cheque" },
           }, htmlAttributes: new { @class = "form-control" })
                @*@Html.EditorFor(model => model.Ref, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ref, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div id="Description">
        <div class="form-group">
            @Html.Label("Description[0].Descrption", "Description", htmlAttributes: new { @class = "control-label col-xs-2"})
            <div class="col-xs-4">
                @Html.Editor("Description[0].Description", new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessage("Description[0].Description", "", new { @class = "text-danger"})
            </div>

            @*@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>*@
        </div>

        <div class="form-group">
            @Html.Label("Description[0].Amount", htmlAttributes: new { @class = "control-label col-xs-2"})
            <div class="col-xs-4">
                <input type="checkbox" onclick="click1()" id="checkbx1" /> include 6%(GST)
                @Html.Editor("Description[0].Amount", new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessage("Description[0].Amount", "", new { @class = "text-danger"})
            </div>
            @*@Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                <input type="checkbox" onclick="click1()" id="checkbx1" /> include 6%(GST)
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>*@
        </div>

        <div id="DescriptionBtn" class="form-group">
            <label class="control-label col-xs-2"></label>
            <div class="col-xs-4">
                <button id="add" type="button" class="btn btn-primary btn-xs"><i class="fa fa-plus-circle" aria-hidden="true"></i>&nbsp;Add</button>
            </div>
        </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.GST, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GST, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GST, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.GSTAmt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GSTAmt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GSTAmt, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.FinalTotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinalTotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FinalTotal, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-1" style="width: 10%">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control", @type = "color" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cb, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cb, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ud, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ud, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ud, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ub, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ub, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ub, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.st, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.st, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.st, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-offset-2 col-xs-4">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    function click1()
    {
        var checkBoxMI = $('#checkbx1');
        var x = document.getElementById("txt1").value;
        if (checkBoxMI.is(':checked'))
        {
            document.getElementById("Gst1").value = x - ((x * 100) / 106)
        }
    }
</script>

<div>
    @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-primary"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


<script>
    function _deleteDescription(t) {
        $(t).parent().parent().remove();
        _updateDescriptionId();
    }

    function _updateDescriptionId() {
        var DescriptionObj = $('.DescriptionDiv');
        var le = DescriptionObj.length;
        var a = 1;

        DescriptionObj.each(function () {
            if (le > 0 && a <= le) {
                this.amount[0].amount[0].innerHTML = "Description(" + (a + 1) + ")";
                this.amount[1].amount[1].amount[0].name = "Description[" + a + "].Description";
                this.amount[2].amount[1].amount[0].name = "Description[" + a + "].Amount";

                a++;
            }
        });
    }

    $(document).ready(function () {
        $("#add").click(function () {
            var b = $('.DescriptionDiv').length + 1;

            $("#DescriptionBtn").before("<div class = 'DescriptionDiv'><h4><span>Description(" + (b + 1) + ")</span><button type='button' onclick='return _deleteDescription(this)' class='btn btn-primary btn-xs'><i class='fa fa-times' aria-hidden='true'></i></button></h4><div class = 'form-group'><label class = 'control-label col-xs-2'>Description</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Description[" + b + "].Description' type='text' value=''></div></div><div class='form-group'><label class = 'control-label col-xs-4'><input type='checkbox' onclick='click1()' id='checkbx1' /> include 6%(GST)</div></label><div class = 'form-group'><label class = 'control-label col-xs-2'>Amount</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Description[" + b + "].Description' type='text' value=''></div>");

        });
    });
    </script>
}
