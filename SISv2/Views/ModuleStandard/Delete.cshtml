@model SISv2.Models.ModuleStandard

@{
    ViewBag.Title = "Edit";
}

<h2>Delete</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ModuleStandard</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Course_ModuleId, "Course_ModuleId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Course_ModuleId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Course_ModuleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MarkTypeId, "MarkTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MarkTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MarkTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LabName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LabName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LabName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Marks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Marks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Marks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cb, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cb, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ud, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ud, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ud, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ub, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ub, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ub, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.st, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.st, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.st, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Delete" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}










@*@model SISv2.Models.ModuleStandard

@{
    ViewBag.Title = "Delete";
}

<h2>Delete</h2>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>ModuleStandard</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.LabName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LabName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Marks)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Marks)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.cd)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.cd)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.cb)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.cb)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ud)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ud)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ub)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ub)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.st)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.st)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Course_Module.CourseId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Course_Module.CourseId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MarkType.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MarkType.Name)
        </dd>

    </dl>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-default" /> |
            @Html.ActionLink("Back to List", "Index")
        </div>
    }
</div>*@
