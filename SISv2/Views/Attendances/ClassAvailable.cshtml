@model IEnumerable<SISv2.Models.ClassStudent>

@{
    ViewBag.Title = "Class Available";
}

<h2>Class Available</h2>

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@

<br>

@using (Html.BeginForm("ClassAvailable", "Attendances", FormMethod.Get))
{
    @Html.DropDownList("Search", new List<SelectListItem>

                    {
                        new SelectListItem{ Text="-- Select Class Status --", Value = ""},
                        new SelectListItem{ Text="Active", Value = "1" },
                        new SelectListItem{ Text="Deactive", Value = "0" },
                    }, htmlAttributes: new { @class = "" })

    <input type="submit" class="btn btn-default" value="Search" />
}

<br>





<table class="table">

@{
    int count = Model.Count();
}

@if (count == 0)
{

    <tr>
        <th>
            <br>
            <bold>Does Not Have Class Available !<br>
            </bold>
        <th>
    </tr>
}
else
{
    <tr>          
              
        <th>
            @Html.DisplayNameFor(model => model.Course_Module.Course.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Course_Module.Module.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Course_Module.Trainer.Name)
        </th>
        <th>
            Create Date
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>  

        <th></th>
    </tr>

    int? same = 0;
    string date = "";

    foreach (var item in Model)
    {
        if (item.Course_ModuleId != same || item.CreateDate.Value.ToShortDateString() != date)
        {
            same = item.Course_ModuleId;
            date = item.CreateDate.Value.ToShortDateString();

        <tr>

         

            <td>
                @Html.DisplayFor(modelItem => item.Course_Module.Course.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Course_Module.Module.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Course_Module.Trainer.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreateDate)
            </td>
            @if (item.Status == true)
            {
                <td>
                    Active
                </td>
            }
            else if (item.Status == false)
            {
                <td>
                    Deactive
                </td>
            }
    

             <td>
                 @Html.ActionLink("Option", "CheckChoise", new { id = item.Course_ModuleId, id2 = item.Status, id3 = item.CreateDate })

                        @Html.ActionLink("Check Attendance", "CheckChoise", new { id = item.Id }) |
                        @Html.ActionLink("Mark Attendance", "MarkAttendance", new { id = item.Id }, new { onclick = "return confirm('Are you sure mark this class attendance ?');" }) |
                        @Html.ActionLink("Mark Back Attendance", "MarkBack", new { id = item.Id }, new { onclick = "return confirm('Are you sure mark back this class attendance ?');" })


                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>




</tr>
        }
    }
}


</table>
