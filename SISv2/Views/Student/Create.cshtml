@model SISV2.Models.Student

@{
    ViewBag.Title = "Create";
}

<br />

<script type="text/javascript" src="~/Content/countries2.js"></script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <style>
        body {
      position: relative; 
  }
    </style>
    <body data-spy="scroll" data-target=".navbar">
        <nav class="navbar navbar-inverse navbar-fixed-top" data-spy="affix" data-offset-top="197">
            <ul class="nav navbar-nav">
                <li><a href="#Student">Student Part</a></li>
                <li><a href="#ResultList">SPM Result</a></li>
                <li><a href="#AddressList">Addresses</a></li>
                <li><a href="#Parent">Parent</a></li>
                <li><a href="#SiblingList">Siblings</a></li>
            </ul>
        </nav>
    <div class="form-horizontal">
        <div id="Student">
            <hr />
            <h4>Student</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.IntakeId, "Course & Intake", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.DropDownList("IntakeId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IntakeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Insurence, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.EditorFor(model => model.Insurence, new { htmlAttributes = new { @class = "form-control center" } })
                    @Html.ValidationMessageFor(model => model.Insurence, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IC, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.EditorFor(model => model.IC, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IC, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NationalityId, "Nationality", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.DropDownList("NationalityId", null, "---Select Nationality---", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NationalityId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.DropDownList("Gender", new List<SelectListItem>

                 {
                    new SelectListItem{ Text="---Select Gender---", Value = "" },
                    new SelectListItem{ Text="Male", Value = "Male" },
                    new SelectListItem{ Text="Female", Value = "Female" },
                 }, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.DropDownList("Status", new List<SelectListItem>

                 {
                    new SelectListItem{ Text="---Select Status---", Value = "" },
                    new SelectListItem{ Text="Active", Value = "Active" },
                    new SelectListItem{ Text="InActive", Value = "InActive" },
                    new SelectListItem{ Text="Drop", Value = "Drop" },
                    new SelectListItem{ Text="Graduated", Value = "Graduated" },
                 }, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNum, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.EditorFor(model => model.PhoneNum, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNum, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OtherPhoneNum, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.EditorFor(model => model.OtherPhoneNum, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OtherPhoneNum, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.DropDownList("Religion", new List<SelectListItem>

                 {
                    new SelectListItem{ Text="---Select Religion---", Value = "" },
                    new SelectListItem{ Text="Christianity ", Value = "Christianity " },
                    new SelectListItem{ Text="Buddhism ", Value = "Buddhism " },
                    new SelectListItem{ Text="Hinduism ", Value = "Hinduism " },
                    new SelectListItem{ Text="Muslim", Value = "Muslim" },
                    new SelectListItem{ Text="Sikh", Value = "Sikh" },
                    new SelectListItem{ Text="Animist", Value = "Animist" },
                 }, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.StudentPicture, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StudentPicture, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StudentPicture, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.WorkingExp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.WorkingExp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WorkingExp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HDYKSBIT, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HDYKSBIT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HDYKSBIT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumSibling, "Number Sibling", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.EditorFor(model => model.NumSibling, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumSibling, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BirthOrd, "Birth Order", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.EditorFor(model => model.BirthOrd, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BirthOrd, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.st, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.st, new { htmlAttributes = new { @class = "form-control", @Value = 1, @readonly = "Read Only" } })
                @Html.ValidationMessageFor(model => model.st, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div id="ResultList">
            <h4>SPM Result</h4>

            <div class="form-group">
                @Html.Label("SPMResults[0].SubjectName", "Subject Name", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.Editor("SPMResults[0].SubjectName", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("SPMResult[0].SubjectName", "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("SPMResults[0].Grade", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.DropDownList("SPMResults[0].Grade", new SelectList(ViewBag.SPMResultList, "Value", "Text"), "---Select Grade---", htmlAttributes: new { @class = "form-control" })
                </div>

            </div>
        </div>

        <div id="ResultButton" class="form-group">
            <label class="control-label col-xs-2"></label>
            <div class="col-xs-4">
                <button id="addResult" type="button" class="btn btn-primary btn-xs"><i class="fa fa-plus-circle" aria-hidden="true"></i> &nbsp; Add Subject</button>
            </div>
        </div>

        <div id="AddressList">
            <h4>Address</h4>

            <div class="form-group">
                @Html.Label("Addresses[0].StreetLine1", "Street Line1", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.Editor("Addresses[0].StreetLine1", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("Addresses[0].StreetLine1", "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Addresses[0].StreetLine2", "Street Line 2", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.Editor("Addresses[0].StreetLine2", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("Addresses[0].StreetLine2", "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Addresses[0].PostCode", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.Editor("Addresses[0].PostCode", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("Addresses[0].PostCode", "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Addresses[0].City", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.Editor("Addresses[0].City", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("Addresses[0].City", "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Addresses[0].State", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.Editor("Addresses[0].State", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("Addresses[0].State", "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Addresses[0].Country", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    <select id="country" name="Addresses[0].Country" class="form-control"></select>
                    @Html.ValidationMessage("Addresses[0].Country", "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div id="addressButton" class="form-group">
            <label class="control-label col-xs-2"></label>
            <div class="col-xs-4">
                <button id="addAddress" type="button" class="btn btn-primary btn-xs"><i class="fa fa-plus-circle" aria-hidden="true"></i> &nbsp; Add Address</button>
            </div>
        </div>

        
        <hr />
        <div id="Parent">
            <h4>Parents</h4>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.SingleParent, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.DropDownList("Parent[0].SingleParent", new List<SelectListItem>

                 {
                    new SelectListItem{ Text="---Select---", Value = "" },
                    new SelectListItem{ Text="Yes", Value = "Yes" },
                    new SelectListItem{ Text="No", Value = "No" },
                 }, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Relationship", htmlAttributes: new {  @class = "control-label col-xs-2"})
                <div class="col-xs-4">
                    <button id="hide" class="btn btn-primary btn-xs" onclick="return function1()">Father Or Mon</button>
                    <button id="show" class="btn btn-primary btn-xs" onclick="return function2()">Guardian</button>
                </div>
            </div>
            <div class="form-group" id="rlts" style="display:none">
                <div class="form-group">
                    @Html.Label("Guardian[0].Gender", "Gender", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.DropDownList("Guardian[0].Gender", new List<SelectListItem>
                            {
                            new SelectListItem{ Text="---Select---", Value = "" },
                            new SelectListItem{ Text="Male", Value = "Male" },
                            new SelectListItem{ Text="Female", Value = "Female" },
                            }, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Guardian[0].Name", "Name", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Guardian[0].Name", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Guardian[0].Name", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Guardian[0].IC", "IC", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Guardian[0].IC", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Guardian[0].IC", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Guardian[0].Edu", "Edu", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Guardian[0].Edu", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Guardian[0].Edu", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Guardian[0].WorkStatus", "WorkStatus", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Guardian[0].WorkStatus", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Guardian[0].WorkStatus", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Guardian[0].Job", "Job", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Guardian[0].Job", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Guardian[0].Job", "", new { @class = "text-danger" })
                    </div>
                    </div>
                <div class="form-group">
                    @Html.Label("Guardian[0].FeildWork", "FeildWork", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Guardian[0].FeildWork", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Guardian[0].FeildWork", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Guardian[0].SectorJob", "SectorJob", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Guardian[0].SectorJob", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Guardian[0].SectorJob", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Guardian[0].Salary", "Salary", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Guardian[0].Salary", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Guardian[0].Salary", "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group" id="rlts2" style="display:none">
                <div class="form-group">
                    @Html.Label("Parent[0].MotherName", "Mother Name", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].MotherName", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].MotherName", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Parent[0].MotherIC", "Mother IC", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].MotherIC", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].MotherIC", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Parent[0].MotherEdu", "Mother Edu", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].MotherEdu", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].MotherEdu", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Parent[0].MotherWorkStatus", "Mother WorkStatus", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].MotherWorkStatus", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].MotherWorkStatus", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Parent[0].MotherJob", "Mother Job", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].MotherJob", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].MotherJob", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Parent[0].MotherFeildWork", "Mother FeildWork", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].MotherFeildWork", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].MotherFeildWork", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Parent[0].MotherSectorJob", "Mother SectorJob", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].MotherSectorJob", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].MotherSectorJob", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Parent[0].MotherSalary", "Mother Salary", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].MotherSalary", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].MotherSalary", "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group" id="rlts3" style="display:none">
                <div class="form-group">
                    @Html.Label("Parent[0].FatherName", "Father Name", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].FatherName", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].FatherName", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Parent[0].FatherIC", "Father IC", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].FatherIC", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].FatherIC", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Parent[0].FatherEdu", "Father Edu", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].FatherEdu", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].FatherEdu", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Parent[0].FatherWorkStatus", "Father WorkStatus", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].FatherWorkStatus", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].FatherWorkStatus", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Parent[0].FatherJob", "Father Job", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].FatherJob", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].FatherJob", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Parent[0].FatherFeildWork", "Father FeildWork", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].FatherFeildWork", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].FatherFeildWork", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Parent[0].FatherSectorJob", "Father SectorJob", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].FatherSectorJob", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].FatherSectorJob", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Parent[0].FatherSalary", "Father Salary", htmlAttributes: new { @class = "control-label col-xs-2" })
                    <div class="col-xs-4">
                        @Html.Editor("Parent[0].FatherSalary", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("Parent[0].FatherSalary", "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <hr>

        <div id="SiblingList">
            <h4>Siblings</h4>

            <div class="form-group">
                @Html.Label("Siblings[0].Name", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.Editor("Siblings[0].Name", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("Siblings[0].Name", "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Siblings[0].Age", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.Editor("Siblings[0].Age", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("Siblings[0].Age", "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Siblings[0].Gender", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.DropDownList("Siblings[0].Gender", new List<SelectListItem>

             {
                new SelectListItem{ Text="---Select Gender---", Value = "" },
                new SelectListItem{ Text="Male", Value = "Male" },
                new SelectListItem{ Text="Female", Value = "Female" },
             }, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Siblings[0].HomePosition", "Home Position", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.Editor("Siblings[0].HomePosition", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("Siblings[0].HomePosition", "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Siblings[0].Occupation", htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-4">
                    @Html.Editor("Siblings[0].Occupation", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("Siblings[0].Occupation", "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="siblingButton" class="form-group">
            <label class="control-label col-xs-2"></label>
            <div class="col-xs-4">
                <button id="addSibling" type="button" class="btn btn-primary btn-xs"><i class="fa fa-plus-circle" aria-hidden="true"></i> &nbsp; Add Sibling</button>
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-offset-2 col-xs-4">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>
        </body>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquerymask")
    @Scripts.Render("~/Content/plugins/input-mask/js")
    @Scripts.Render("~/Content/plugins/momentjs/js")

    <script language="javascript">print_country("country");</script>
    <script src="~/Scripts/jquery.maskedinput.js" type="text/javascript"></script>

    <script>
        $(document).ready(function() {
            //$("#IC").inputmask("mask", { "mask": "999999-99-9999" });
            $("#PhoneNum").inputmask("mask", { "mask": "999-999 99999" });
            $("#DOB").inputmask("date");
        });
    </script>
    <script>
        function _deleteAddress(t) {
            $(t).parent().parent().remove();
            _updateAddressId();
        }

        function _updateAddressId()
        {
            var addressObj = $('.addressDiv');
            var l = addressObj.length;
            var k = 1;
            var b = 2;

            addressObj.each(function () {
                if (l > 0 && k <= l) {
                    this.childNodes[0].childNodes[0].innerHTML = "Address(" + (k + 1)  +")";
                    this.childNodes[1].childNodes[1].childNodes[0].name = "Addresses[" + k + "].StreetLine1";
                    this.childNodes[2].childNodes[1].childNodes[0].name = "Addresses[" + k + "].StreetLine2";
                    this.childNodes[3].childNodes[1].childNodes[0].name = "Addresses[" + k + "].PostCode";
                    this.childNodes[4].childNodes[1].childNodes[0].name = "Addresses[" + k + "].City";
                    this.childNodes[5].childNodes[1].childNodes[0].name = "Addresses[" + k + "].State";
                    this.childNodes[6].childNodes[1].childNodes[0].name = "Addresses[" + k + "].Country";

                    k++;
                    b++;
                }
            });
        }

        $(document).ready(function () {

            $("#addAddress").click(function () {
                var z = $('.addressDiv').length + 1;

                $("#addressButton").before("<div class='addressDiv form-group'><h4><span>Address(" + (z + 1) + ")</span> <button type='button' onclick='return _deleteAddress(this)' class='btn btn-primary btn-xs'><i class='fa fa-times' aria-hidden='true'></i></button></h4><div class='form-group'><label class='control-label col-xs-2'>Street Line1</label><div class='col-xs-4'><input class='form-control text-box single-line'name='Addresses[" + z + "].StreetLine1' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>Street Line 2</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].StreetLine2' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>PostCode</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].PostCode' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>City</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].City' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>State</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].State' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>Country</label><div class='col-xs-4'><select name='Addresses[" + z + "].Country' class='form-control'><option value='Afghanistan'>Afghanistan</option><option value='Albania'>Albania</option><option value='Algeria'>Algeria</option><option value='American Samoa'>American Samoa</option><option value='Angola'>Angola</option><option value='Anguilla'>Anguilla</option><option value='Antartica'>Antartica</option><option value='Antigua and Barbuda'>Antigua and Barbuda</option><option value='Argentina'>Argentina</option><option value='Armenia'>Armenia</option><option value='Aruba'>Aruba</option><option value='Ashmore and Cartier Island'>Ashmore and Cartier Island</option><option value='Australia'>Australia</option><option value='Austria'>Austria</option><option value='Azerbaijan'>Azerbaijan</option><option value='Bahamas'>Bahamas</option><option value='Bahrain'>Bahrain</option><option value='Bangladesh'>Bangladesh</option><option value='Barbados'>Barbados</option><option value='Belarus'>Belarus</option><option value='Belgium'>Belgium</option><option value='Belize'>Belize</option><option value='Benin'>Benin</option><option value='Bermuda'>Bermuda</option><option value='Bhutan'>Bhutan</option><option value='Bolivia'>Bolivia</option><option value='Bosnia and Herzegovina'>Bosnia and Herzegovina</option><option value='Botswana'>Botswana</option><option value='Brazil'>Brazil</option><option value='British Virgin Islands'>British Virgin Islands</option><option value='Brunei'>Brunei</option><option value='Bulgaria'>Bulgaria</option><option value='Burkina Faso'>Burkina Faso</option><option value='Burma'>Burma</option><option value='Burundi'>Burundi</option><option value='Cambodia'>Cambodia</option><option value='Cameroon'>Cameroon</option><option value='Canada'>Canada</option><option value='Cape Verde'>Cape Verde</option><option value='Cayman Islands'>Cayman Islands</option><option value='Central African Republic'>Central African Republic</option><option value='Chad'>Chad</option><option value='Chile'>Chile</option><option value='China'>China</option><option value='Christmas Island'>Christmas Island</option><option value='Clipperton Island'>Clipperton Island</option><option value='Cocos (Keeling) Islands'>Cocos (Keeling) Islands</option><option value='Colombia'>Colombia</option><option value='Comoros'>Comoros</option><option value='Congo, Democratic Republic of the'>Congo, Democratic Republic of the</option><option value='Congo, Republic of the'>Congo, Republic of the</option><option value='Cook Islands'>Cook Islands</option><option value='Costa Rica'>Costa Rica</option><option value='Cote d'Ivoire'>Cote d'Ivoire</option><option value='Croatia'>Croatia</option><option value='Cuba'>Cuba</option><option value='Cyprus'>Cyprus</option><option value='Czeck Republic'>Czeck Republic</option><option value='Denmark'>Denmark</option><option value='Djibouti'>Djibouti</option><option value='Dominica'>Dominica</option><option value='Dominican Republic'>Dominican Republic</option><option value='Ecuador'>Ecuador</option><option value='Egypt'>Egypt</option><option value='El Salvador'>El Salvador</option><option value='Equatorial Guinea'>Equatorial Guinea</option><option value='Eritrea'>Eritrea</option><option value='Estonia'>Estonia</option><option value='Ethiopia'>Ethiopia</option><option value='Europa Island'>Europa Island</option><option value='Falkland Islands (Islas Malvinas)'>Falkland Islands (Islas Malvinas)</option><option value='Faroe Islands'>Faroe Islands</option><option value='Fiji'>Fiji</option><option value='Finland'>Finland</option><option value='France'>France</option><option value='French Guiana'>French Guiana</option><option value='French Polynesia'>French Polynesia</option><option value='French Southern and Antarctic Lands'>French Southern and Antarctic Lands</option><option value='Gabon'>Gabon</option><option value='Gambia, The'>Gambia, The</option><option value='Gaza Strip'>Gaza Strip</option><option value='Georgia'>Georgia</option><option value='Germany'>Germany</option><option value='Ghana'>Ghana</option><option value='Gibraltar'>Gibraltar</option><option value='Glorioso Islands'>Glorioso Islands</option><option value='Greece'>Greece</option><option value='Greenland'>Greenland</option><option value='Grenada'>Grenada</option><option value='Guadeloupe'>Guadeloupe</option><option value='Guam'>Guam</option><option value='Guatemala'>Guatemala</option><option value='Guernsey'>Guernsey</option><option value='Guinea'>Guinea</option><option value='Guinea-Bissau'>Guinea-Bissau</option><option value='Guyana'>Guyana</option><option value='Haiti'>Haiti</option><option value='Heard Island and McDonald Islands'>Heard Island and McDonald Islands</option><option value='Holy See (Vatican City)'>Holy See (Vatican City)</option><option value='Honduras'>Honduras</option><option value='Hong Kong'>Hong Kong</option><option value='Howland Island'>Howland Island</option><option value='Hungary'>Hungary</option><option value='Iceland'>Iceland</option><option value='India'>India</option><option value='Indonesia'>Indonesia</option><option value='Iran'>Iran</option><option value='Iraq'>Iraq</option><option value='Ireland'>Ireland</option><option value='Ireland, Northern'>Ireland, Northern</option><option value='Israel'>Israel</option><option value='Italy'>Italy</option><option value='Jamaica'>Jamaica</option><option value='Jan Mayen'>Jan Mayen</option><option value='Japan'>Japan</option><option value='Jarvis Island'>Jarvis Island</option><option value='Jersey'>Jersey</option><option value='Johnston Atoll'>Johnston Atoll</option><option value='Jordan'>Jordan</option><option value='Juan de Nova Island'>Juan de Nova Island</option><option value='Kazakhstan'>Kazakhstan</option><option value='Kenya'>Kenya</option><option value='Kiribati'>Kiribati</option><option value='Korea, North'>Korea, North</option><option value='Korea, South'>Korea, South</option><option value='Kuwait'>Kuwait</option><option value='Kyrgyzstan'>Kyrgyzstan</option><option value='Laos'>Laos</option><option value='Latvia'>Latvia</option><option value='Lebanon'>Lebanon</option><option value='Lesotho'>Lesotho</option><option value='Liberia'>Liberia</option><option value='Libya'>Libya</option><option value='Liechtenstein'>Liechtenstein</option><option value='Lithuania'>Lithuania</option><option value='Luxembourg'>Luxembourg</option><option value='Macau'>Macau</option><option value='Macedonia, Former Yugoslav Republic of'>Macedonia, Former Yugoslav Republic of</option><option value='Madagascar'>Madagascar</option><option value='Malawi'>Malawi</option><option value='Malaysia'>Malaysia</option><option value='Maldives'>Maldives</option><option value='Mali'>Mali</option><option value='Malta'>Malta</option><option value='Man, Isle of'>Man, Isle of</option><option value='Marshall Islands'>Marshall Islands</option><option value='Martinique'>Martinique</option><option value='Mauritania'>Mauritania</option><option value='Mauritius'>Mauritius</option><option value='Mayotte'>Mayotte</option><option value='Mexico'>Mexico</option><option value='Micronesia, Federated States of'>Micronesia, Federated States of</option><option value='Midway Islands'>Midway Islands</option><option value='Moldova'>Moldova</option><option value='Monaco'>Monaco</option><option value='Mongolia'>Mongolia</option><option value='Montserrat'>Montserrat</option><option value='Morocco'>Morocco</option><option value='Mozambique'>Mozambique</option><option value='Namibia'>Namibia</option><option value='Nauru'>Nauru</option><option value='Nepal'>Nepal</option><option value='Netherlands'>Netherlands</option><option value='Netherlands Antilles'>Netherlands Antilles</option><option value='New Caledonia'>New Caledonia</option><option value='New Zealand'>New Zealand</option><option value='Nicaragua'>Nicaragua</option><option value='Niger'>Niger</option><option value='Nigeria'>Nigeria</option><option value='Niue'>Niue</option><option value='Norfolk Island'>Norfolk Island</option><option value='Northern Mariana Islands'>Northern Mariana Islands</option><option value='Norway'>Norway</option><option value='Oman'>Oman</option><option value='Pakistan'>Pakistan</option><option value='Palau'>Palau</option><option value='Panama'>Panama</option><option value='Papua New Guinea'>Papua New Guinea</option><option value='Paraguay'>Paraguay</option><option value='Peru'>Peru</option><option value='Philippines'>Philippines</option><option value='Pitcaim Islands'>Pitcaim Islands</option><option value='Poland'>Poland</option><option value='Portugal'>Portugal</option><option value='Puerto Rico'>Puerto Rico</option><option value='Qatar'>Qatar</option><option value='Reunion'>Reunion</option><option value='Romainia'>Romainia</option><option value='Russia'>Russia</option><option value='Rwanda'>Rwanda</option><option value='Saint Helena'>Saint Helena</option><option value='Saint Kitts and Nevis'>Saint Kitts and Nevis</option><option value='Saint Lucia'>Saint Lucia</option><option value='Saint Pierre and Miquelon'>Saint Pierre and Miquelon</option><option value='Saint Vincent and the Grenadines'>Saint Vincent and the Grenadines</option><option value='Samoa'>Samoa</option><option value='San Marino'>San Marino</option><option value='Sao Tome and Principe'>Sao Tome and Principe</option><option value='Saudi Arabia'>Saudi Arabia</option><option value='Scotland'>Scotland</option><option value='Senegal'>Senegal</option><option value='Seychelles'>Seychelles</option><option value='Sierra Leone'>Sierra Leone</option><option value='Singapore'>Singapore</option><option value='Slovakia'>Slovakia</option><option value='Slovenia'>Slovenia</option><option value='Solomon Islands'>Solomon Islands</option><option value='Somalia'>Somalia</option><option value='South Africa'>South Africa</option><option value='South Georgia and South Sandwich Islands'>South Georgia and South Sandwich Islands</option><option value='Spain'>Spain</option><option value='Spratly Islands'>Spratly Islands</option><option value='Sri Lanka'>Sri Lanka</option><option value='Sudan'>Sudan</option><option value='Suriname'>Suriname</option><option value='Svalbard'>Svalbard</option><option value='Swaziland'>Swaziland</option><option value='Sweden'>Sweden</option><option value='Switzerland'>Switzerland</option><option value='Syria'>Syria</option><option value='Taiwan'>Taiwan</option><option value='Tajikistan'>Tajikistan</option><option value='Tanzania'>Tanzania</option><option value='Thailand'>Thailand</option><option value='Tobago'>Tobago</option><option value='Toga'>Toga</option><option value='Tokelau'>Tokelau</option><option value='Tonga'>Tonga</option><option value='Trinidad'>Trinidad</option><option value='Tunisia'>Tunisia</option><option value='Turkey'>Turkey</option><option value='Turkmenistan'>Turkmenistan</option><option value='Tuvalu'>Tuvalu</option><option value='Uganda'>Uganda</option><option value='Ukraine'>Ukraine</option><option value='United Arab Emirates'>United Arab Emirates</option><option value='United Kingdom'>United Kingdom</option><option value='Uruguay'>Uruguay</option><option value='USA'>USA</option><option value='Uzbekistan'>Uzbekistan</option><option value='Vanuatu'>Vanuatu</option><option value='Venezuela'>Venezuela</option><option value='Vietnam'>Vietnam</option><option value='Virgin Islands'>Virgin Islands</option><option value='Wales'>Wales</option><option value='Wallis and Futuna'>Wallis and Futuna</option><option value='West Bank'>West Bank</option><option value='Western Sahara'>Western Sahara</option><option value='Yemen'>Yemen</option><option value='Yugoslavia'>Yugoslavia</option><option value='Zambia'>Zambia</option><option value='Zimbabwe'>Zimbabwe</option></select></div></div></div>");
            });

        });
    </script>


    <script>
        // Add SPM Result
        //
        //
        function _deleteResult(t) {
            $(t).parent().parent().remove();
            _updateSPMResultId();
        }

        function _updateSPMResultId() {
            var ResultObj = $('.ResultDiv');
            var le = ResultObj.length;
            var a = 1;

            ResultObj.each(function () {
                if (le > 0 && a <= le) {
                    this.childNodes[0].childNodes[0].innerHTML = "Subject(" + (a+1) + ")";
                    this.childNodes[1].childNodes[1].childNodes[0].name = "SPMResult[" + a + "].SubjectName";
                    this.childNodes[2].childNodes[1].childNodes[0].name = "SPMResult[" + a + "].Grade";

                    a++;
                }
            });
        }

        $(document).ready(function () {

            $("#addResult").click(function () {
                var b = $('.ResultDiv').length + 1;

                $("#ResultButton").before("<div class='ResultDiv'><h4><span>Subject(" + (b + 1) + ")</span><button type='button' onclick='return _deleteResult(this)' class='btn btn-primary btn-xs'><i class='fa fa-times' aria-hidden='true'></i></button></h4><div class='form-group'><label class='control-label col-xs-2'>Subject Name</label><div class='col-xs-4'><input class='form-control text-box single-line'  name='SPMResults[" + b + "].SubjectName' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2' >Grade</label><div class='col-xs-4'><select class='form-control' name='SPMResults[" + b + "].Grade'><option value=''>---Select Grade---</option><option value='A+'>A+</option><option value='A'>A</option><option value='A-'>A-</option><option value='B+'>B+</option><option value='B'>B</option><option value='C+'>C+</option><option value='C'>C</option><option value='D'>D</option><option value='E'>E</option><option value='G'>G</option><option value='TH'>TH</option></select></div></div></div>");


                //$("#ResultButton").before("<div class='ResultDiv'><h4><span>Subject(" + b + ")</span><button type='button' onclick='return _deleteResult(this)' class='btn btn-primary btn-xs'><i class='fa fa-times' aria-hidden='true'></i></button></h4><div class='form-group'><label class='control-label col-xs-2' for='SPMResult[" + b + "].SubjectName'>SubjectName</label><div class='col-xs-4'><input class='form-control text-box single-line' name='SPMResult[0].SubjectName' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2' for='SPMResult[" + b + "].Grade'>Grade</label><div class='col-xs-4'><input class='form-control text-box single-line' name='SPMResult[0].Grade' type='text' value=''></div></div></div>");
                //$("#ResultButton").before("<div class='ResultDiv form-group'><h4><span>Address(" + z + ")</span> <button type='button' onclick='return _deleteAddress(this)' class='btn btn-primary btn-xs'><i class='fa fa-times' aria-hidden='true'></i></button></h4><div class='form-group'><label class='control-label col-xs-2'>StreetLine1</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].StreetLine1' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>StreetLine2</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].StreetLine2' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>PostCode</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].PostCode' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>City</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].City' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>State</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].State' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>Country</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].Country' type='text' value=''></div></div></div>");

            });
        });
    </script>

    <script>
        // Add Sibling
        //
        //
        function _deleteSibling(t) {
            $(t).parent().parent().remove();
            _updateSiblingId();
        }

        function _updateSiblingId() {
            var SiblingObj = $('.SiblingDiv');
            var l = SiblingObj.length;
            var k = 1;

            SiblingObj.each(function () {
                if (l > 0 && k <= l) {
                    this.childNodes[0].childNodes[0].innerHTML = "Sibling(" + (k+1) + ")";
                    this.childNodes[1].childNodes[1].childNodes[0].name = "Sibling[" + k + "].Name";
                    this.childNodes[2].childNodes[1].childNodes[0].name = "Sibling[" + k + "].Age";
                    this.childNodes[3].childNodes[1].childNodes[0].name = "Sibling[" + k + "].Gender";
                    this.childNodes[4].childNodes[1].childNodes[0].name = "Sibling[" + k + "].Relationship";
                    this.childNodes[5].childNodes[1].childNodes[0].name = "Sibling[" + k + "].HomePosition";
                    this.childNodes[6].childNodes[1].childNodes[0].name = "Sibling[" + k + "].Occupation";

                    k++;
                }
            });
        }

        $(document).ready(function () {

            $("#addSibling").click(function () {
                var z = $('.SiblingDiv').length + 1;

                $("#siblingButton").before("<div class='SiblingDiv'><h4><span>Sibling(" + (z + 1) + ")</span><button type='button' onclick='return _deleteSibling(this)' class='btn btn-primary btn-xs'><i class='fa fa-times' aria-hidden='true'></i></button></h4><div class='form-group'><label class='control-label col-xs-2'>Name</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Siblings[" + z + "].Name' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2' >Age</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Siblings[" + z + "].Age' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>Gender</label><div class='col-xs-4'><select class='form-control' name='Siblings[" + z + "].Gender'><option value=''>---Select Gender---</option><option value='Male'>Male</option><option value='Female'>Female</option></select></div></div><div class='form-group'><label class='control-label col-xs-2'>Home Position</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Siblings[" + z + "].HomePosition' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>Occupation</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Siblings[" + z + "].Occupation' type='text' value=''></div></div></div>");
                //$("#ResultButton").before("<div class='ResultDiv form-group'><h4><span>Address(" + z + ")</span> <button type='button' onclick='return _deleteAddress(this)' class='btn btn-primary btn-xs'><i class='fa fa-times' aria-hidden='true'></i></button></h4><div class='form-group'><label class='control-label col-xs-2'>StreetLine1</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].StreetLine1' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>StreetLine2</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].StreetLine2' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>PostCode</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].PostCode' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>City</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].City' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>State</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].State' type='text' value=''></div></div><div class='form-group'><label class='control-label col-xs-2'>Country</label><div class='col-xs-4'><input class='form-control text-box single-line' name='Addresses[" + z + "].Country' type='text' value=''></div></div></div>");

            });
        });
    </script>

<script>
        function _deleteGuardian(t) {
            $(t).parent().parent().remove();
            _updateGuardianId();
        }

        function _updateGuardianId() {
            var GuardianObj = $('.GuardianDiv');
            var l = GuardianObj.length;
            var k = 1;
            var b = 2;




            parentObj.each(function () {
                if (l > 0 && k <= l) {
                    this.childNodes[0].childNodes[0].innerHTML = "Guardian(" + (k + 1) + ")";
                    this.childNodes[1].childNodes[1].childNodes[0].name = "Guardian[" + k + "].Relationship";
                    this.childNodes[2].childNodes[1].childNodes[0].name = "Guardian[" + k + "].Name";
                    this.childNodes[3].childNodes[1].childNodes[0].name = "Guardian[" + k + "].IC";
                    this.childNodes[4].childNodes[1].childNodes[0].name = "Guardian[" + k + "].Edu";
                    this.childNodes[5].childNodes[1].childNodes[0].name = "Guardian[" + k + "].WorkStatus";
                    this.childNodes[6].childNodes[1].childNodes[0].name = "Guardian[" + k + "].Jod";
                    this.childNodes[7].childNodes[1].childNodes[0].name = "Guardian[" + k + "].FeildWork";
                    this.childNodes[8].childNodes[1].childNodes[0].name = "Guardian[" + k + "].SectorJob";
                    this.childNodes[9].childNodes[1].childNodes[0].name = "Guardian[" + k + "].Salary";
                    k++;
                    b++;
                }
            });
        }
</script>
<script>
        function _deleteParent(t) {
            $(t).parent().parent().remove();
            _updateParentId();
        }

        function _updateParentId()
        {
            var parentObj = $('.parentDiv');
            var l = parentObj.length;
            var k = 1;
            var b = 2;

            parentObj.each(function () {
                if (l > 0 && k <= l) {
                    this.childNodes[0].childNodes[0].innerHTML = "Parent(" + (k + 1)  +")";
                    this.childNodes[1].childNodes[1].childNodes[0].name = "Parent[" + k + "].MotherName";
                    this.childNodes[2].childNodes[1].childNodes[0].name = "Parent[" + k + "].MotherIC";
                    this.childNodes[3].childNodes[1].childNodes[0].name = "Parent[" + k + "].MotherEdu";
                    this.childNodes[4].childNodes[1].childNodes[0].name = "Parent[" + k + "].MotherWorkStatus";
                    this.childNodes[5].childNodes[1].childNodes[0].name = "Parent[" + k + "].MotherJod";
                    this.childNodes[6].childNodes[1].childNodes[0].name = "Parent[" + k + "].MotherFeildWork";
                    this.childNodes[7].childNodes[1].childNodes[0].name = "Parent[" + k + "].MotherSectorJob";
                    this.childNodes[8].childNodes[1].childNodes[0].name = "Parent[" + k + "].MotherSalary";
                    this.childNodes[9].childNodes[1].childNodes[0].name = "Parent[" + k + "].Relationship";
                    this.childNodes[10].childNodes[1].childNodes[0].name = "Parent[" + k + "].FatherName";
                    this.childNodes[11].childNodes[1].childNodes[0].name = "Parent[" + k + "].FatherIC";
                    this.childNodes[12].childNodes[1].childNodes[0].name = "Parent[" + k + "].FatherEdu";
                    this.childNodes[13].childNodes[1].childNodes[0].name = "Parent[" + k + "].FatherWorkStatus";
                    this.childNodes[14].childNodes[1].childNodes[0].name = "Parent[" + k + "].FatherJod";
                    this.childNodes[15].childNodes[1].childNodes[0].name = "Parent[" + k + "].FatherFeildWork";
                    this.childNodes[16].childNodes[1].childNodes[0].name = "Parent[" + k + "].FatherSectorJob";
                    this.childNodes[17].childNodes[1].childNodes[0].name = "Parent[" + k + "].FatherSalary";


                    k++;
                    b++;
                }
            });
        }
</script>
<script>
        function function1() {
            event.preventDefault();
            var i = document.getElementById("rlts");
            var w = document.getElementById("rlts2");
            var z = document.getElementById("rlts3");
            var a = document.getElementById("show");
            var x = "Father/Mon";
            i.style.display = "none";
            w.style.display = "block";
            z.style.display = "block";
            return x;

        }
        function function2() {
            event.preventDefault();
            var i = document.getElementById("rlts");
            var w = document.getElementById("rlts2");
            var z = document.getElementById("rlts3");
            var a = document.getElementById("show");
            var j = "Guardian";
            i.style.display = "block";
            w.style.display = "none";
            z.style.display = "none";
            return j;
        }
</script> 
}


