@model SISv2.Models.Package_Course

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Package_Course</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, "CourseName", htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.DropDownList("CourseId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentId, "StudentId", htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.DropDownList("StudentId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalPrice, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.TotalPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstPay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.FirstPay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstPay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InterestRate, "Loan(%)", htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.InterestRate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InterestRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MonthlyInterest, "MonthlyPln", htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.MonthlyInterest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MonthlyInterest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalMonthlyP, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.TotalMonthlyP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalMonthlyP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AfterPlnPay, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.AfterPlnPay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AfterPlnPay, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.MonthlyPayment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MonthlyPayment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MonthlyPayment, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                @Html.EditorFor(model => model.Amount, " ", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, " ", new { @class = "text-danger" })
            </div>
        </div>


        @Html.HiddenFor(model => model.TotalLeft)


        <div class="form-group">
            @Html.LabelFor(model => model.cd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cb, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cb, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ud, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ud, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ud, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ub, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ub, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ub, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.st, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.st, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.st, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-offset-2 col-xs-10">
                <input type="submit" value="Delete" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}








@*@model SISv2.Models.Package_Course

@{
    ViewBag.Title = "Delete";
}

<h2>Delete</h2>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Package_Course</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Course.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Course.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Student.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Student.Name)
        </dd>

        @*<dt>
            @Html.DisplayNameFor(model => model.TotalPrice)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TotalPrice)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FirstPay)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstPay)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MonthlyInterest)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MonthlyInterest)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TotalMonthlyP)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TotalMonthlyP)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AfterPlnPay)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AfterPlnPay)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.InterestRate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.InterestRate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MonthlyPayment)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MonthlyPayment)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TotalLeft)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TotalLeft)
        </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.cd)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.cd)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.cb)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.cb)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ud)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ud)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ub)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ub)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.st)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.st)
        </dd>

    </dl>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-default" /> |
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary"})
        </div>
    }
</div>*@
